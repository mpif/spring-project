<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
	   	http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd ">

	<context:annotation-config />
	<context:component-scan base-package="com.mpif.springaop" />

	<!--
	<aop:aspectj-autoproxy proxy-target-class="true" >
		<aop:include name="differentAdvicePointcut" />
	</aop:aspectj-autoproxy>
	-->

	<aop:config>
		<!-- 配置切入点表达式:哪些类的哪些方法需要进行增强 -->
		<aop:pointcut  expression="this(com.mpif.springaop.DifferentAdvicePointcut)" id="differentAdvicePointcut"/>
		<!-- 配置切面 -->
		<aop:aspect ref="differentAdviceProcessor">
			<aop:before method="doBefore" pointcut-ref="differentAdvicePointcut"/>
			<aop:after-returning method="doAfterReturning" pointcut-ref="differentAdvicePointcut"/>
			<aop:around method="doAround" pointcut-ref="differentAdvicePointcut"/>
			<aop:after-throwing method="doAfterThrowing" pointcut-ref="differentAdvicePointcut"/>
			<aop:after method="doAfter" pointcut-ref="differentAdvicePointcut"/>
		</aop:aspect>
	</aop:config>

	<aop:config>
		<!-- 配置切入点表达式:哪些类的哪些方法需要进行增强 -->
		<aop:pointcut expression="cutAllPackages() and !cutDynamicService() and !cutExcludedService()" id="dynamicLogAspect" />
		<aop:pointcut expression="execution(* com.mpif.springaop..*.*(..))" id="cutAllPackages"/>
		<aop:pointcut expression="execution(* com.mpif.springaop.DynamicConfigureService.*(..))" id="cutDynamicService"/>
		<aop:pointcut expression="execution(* com.mpif.springaop.excluded..*.*(..))" id="cutExcludedService"/>
		<!-- 配置切面 -->
		<aop:aspect ref="springAspectExclusionProcessor">
			<aop:before method="doBefore" pointcut-ref="dynamicLogAspect"/>
			<aop:after-returning method="doAfterReturning" pointcut-ref="dynamicLogAspect"/>
			<aop:around method="doAround" pointcut-ref="dynamicLogAspect"/>
			<aop:after-throwing method="doAfterThrowing" pointcut-ref="dynamicLogAspect"/>
			<aop:after method="doAfter" pointcut-ref="dynamicLogAspect"/>
		</aop:aspect>
	</aop:config>


</beans>